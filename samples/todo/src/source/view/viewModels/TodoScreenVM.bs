import "pkg:/source/maestro/view/viewModel/BaseViewModel.bs"

namespace TSVM
class TodoScreenVM extends BaseViewModel

public name = "todoScreenVM"
public focusId = "addButton"
public focusedIndex = -1
public focusedItem = invalid
public items = createObject("roSGNode", "ContentNode")
public isAutoCreateTimerActive = false
public currentTitle = "none"
public hasItems = false

public function new()
  super("TodoVM")
  m.focusIds = [
    "addButton",
    "removeButton"
    "itemList"
  ]
end function

'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'++ Public api
'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

public function addTodo(value)
  m.logMethod("addTodo")
  currentCount = m.items.getChildCount()
  item = createObject("roSGNode", "ContentNode")
  item.title = "item " + stri(currentCount).trim()
  m.items.appendChild(item)
  m.focusItemAtIndex(m.items.getChildCount() - 1)
  m.setField("hasItems", true)
end function

public function removeTodo(value)
  m.logMethod("removeTodo")
  if m.items.getChildCount() > 0
    m.items.removeChildrenIndex(1, m.items.getChildCount() - 1)
  else
    m.logWarn("tried to remove todo when items was empty!")
  end if
  m.focusItemAtIndex(m.items.getChildCount() - 1)
  m.setField("hasItems", m.items.getChildCount() > 0)
end function

public function onTimerFire()
  m.logMethod("onTimerFire")
end function

public function focusItemAtIndex(newIndex)
  m.setField("focusedIndex", newIndex)
  m.setField("focusedItem", m.items.getChild(newIndex))
  if m.focusedItem <> invalid
    m.setField("currentTitle", "focused:" + m.focusedItem.title)
  else
    m.setField("currentTitle", "none")
  end if
end function

'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'++ Key Handling
'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

private function onKeyPressDown() as boolean
  m.logVerbose("press down focusId", m.focusId)
  
  if m.focusId = "addButton"
    m.setField("focusId", "removeButton")
    return true
  else if m.focusId = "removeButton"
    m.setField("focusId", "itemList")
    return true
  end if
  
  return false
end function

private function onKeyPressUp() as boolean
  m.logVerbose("press up focusId", m.focusId)
  
  if m.focusId = "itemList"
    m.setField("focusId", "removeButton")
    return true
  else if m.focusId = "removeButton"
    m.setField("focusId", "addButton")
    return true
  end if
  
  return false
end function

private function onKeyPressBack() as boolean
  m.logVerbose("press back focusId", m.focusId)
  
  if m.focusId = "itemList"
    m.setField("focusId", "removeButton")
    return true
  end if

  return false
end function

end class
end namespace