import "pkg:/source/maestro/view/viewModel/BaseViewModel.bs"

namespace MCSVM
class MultiControlScreenVM extends BaseViewModel

'outgoing
public focusId = "toggleButton"
public index = 0
public isAnimated = true
public alternateChildren = invalid
public childrenText = "inline children"
public buttonText = "animated: on"

'Incoming
public numContainerChildren = 0

private isUsingGroup1 = false

public function new(group1, group2)
  m.super("MultiControlScreenVM")
  m.setField("rowListContent", m.makeContent(1))
  m.setField("rowListContent2", m.makeContent(3))
  m.group1 = group1
  m.group2 = group2
end function

private function makeContent(numRows)
  rows = []
  for i = 0 to numRows - 1
    rows.push(m.makeRow(10, i))
  end for
  
  content = createObject("roSGNode", "ContentNode")
  content.appendChildren(rows)
  return content
end function

private function makeRow(numItems, index)
  row = createObject("roSGNode", "ContentNode")
  row["TITLE"] = "some title " + stri(index)
  items = []
  
  for i = 0 to numItems - 1 
    item = createObject("roSGNode", "ContentNode")
    item["TITLE"] = "item " + stri(i)
    items.push(item)
    
  end for
  row.appendChildren(items)
  
  return row
end function

'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'++ Public api
'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
public function onToggleIsAnimated(value)
  m.logInfo("onToggleIsAnimated", value)

  m.setField("isAnimated", not m.isAnimated)
  if m.isAnimated
    m.setField("buttonText", "animated: on")
  else
    m.setField("buttonText", "animated: off")
  end if
end function

public function onToggleGroup(value)
  m.logInfo("onToggleGroup", value)

  m.isUsingGroup1 = not m.isUsingGroup1
  
  if m.isUsingGroup1
    m.setField("alternateChildren", m.group1)
    m.setField("childrenText", "group 1")

  else
    m.setField("alternateChildren", m.group2)
    m.setField("childrenText", "group 2")
  end if

end function

'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'++ Private impl
'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'++ Key Handling
'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

public function onKeyPressUp()
  
  if m.index > 0
    m.logInfo("moving index down - animated:", m.isAnimated)
    m.setField("index", m.index - 1)
    return true
  else 
    m.logInfo("focusing on toggle button")
    m.setField("focusId", "toggleButton")
    return true
  end if
  
end function

public function onKeyPressDown()
  
  if m.focusId = "toggleButton" or m.focusId = "groupButton"
    m.setField("focusId", "multiContainer")
    return true
  else
    m.logInfo("moving index up - animated:", m.isAnimated)
    
    if m.index < m.numContainerChildren - 1
      m.setField("index", m.index + 1)
    end if
    return true
  end if
  
end function

public function onKeyPressRight()
  if m.focusId = "toggleButton"
    m.setField("focusId", "groupButton")
    return true
  end if
end function

public function onKeyPressLeft()
  if m.focusId = "groupButton"
    m.setField("focusId", "toggleButton")
    return true
  end if
end function

'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'++ Lifecycle methods
'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

end class
end namespace