'Note this file is intentionally _not_ namespaced


' /**
'  * @module FocusMixin
'  * @description Mixin methods for managing focus
'  */

'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'++ FOCUS
'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

function initializeFocusManager(globalNode)
  globalNode.addFields({"focusManager": createObject("roSGNode", "FocusManager")})
end function

function focusMixinInit()
  m.top.observeField("isFocused", "onIsFocusedChange")
  m.top.observeField("isChildFocused", "onIsChildFocusedChange")

  ' m.globalNode.addFields({
  '   "isFocusLocked": false
  '   "focusLockReason": ""
  ' })
  
  ' m.global.addField("focusedNode", "node", false)
  ' logVerbose(" focusMixinInit ", m.top.subType())
  ' m.currentFocusedControl = invalid
  ' m.isInFocusChain = false
end function

'*************************************************************
'** setFocus
'** abstracts focus setting to make it easier to debug
'** @param node as roSGNode - to set focus to
'** @param isSaving as boolean - whether to save the focus so it later can be restored
'** @param forceSet as boolean - this will override situations where the focus is locked, like when showing a dialog
'*************************************************************
function setFocus(node, isSaving = true, forceSet = false)
  m.global.focusManager.callFunc("setFocusOn", node, forceSet)
end function

'*************************************************************
'** unsetFocus
'** abstracts focus un setting to make it easier to debug
'** @param node as roSGNode - to set focus to
'*************************************************************
function unsetFocus(node)
  m.global.focusManager.callFunc("unsetFocusOn", node)
end function

'*************************************************************
'** setFocusLocked
'** Toggles if the focus is locked to a particular control. If so, only calls to setFocus
'** with an override flag will set the focus
'** @param isLocked as boolean toggles locked mode on or off
'** @param focusLockReason as string helps identify what locked the focus for debugging purposes
'*************************************************************
function setFocusLocked(isLocked, focusLockReason = "")
  m.global.focusManager.callFunc("setFocuseLocked", isLocked, focusLockReason)
end function

function onIsFocusedChange()
  if m.top.isFocused
    onGainedFocus(true)
  else
    onLostFocus()
  end if
end function

function onIsChildFocusedChange()
  if m.top.isChildFocused
    onGainedFocus(false)
  else
    'we dont' notify about this
  end if
end function 

'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
'++ abstract focus methods
'+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

function onGainedFocus(isSelfFocused)
end function


function onLostFocus()
end function

